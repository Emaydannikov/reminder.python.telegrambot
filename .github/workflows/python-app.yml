name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  #schedule:
    #- cron: '15 0 * * *'

permissions:
  contents: read

jobs:
  Test_Deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Setup SSH client
      run: |
        sudo apt-get update
        sudo apt-get install -y ssh-client rsync

    - name: Deploy to remote node
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.REMOTE_SERVER_IP }}
        USER: ${{ secrets.SSH_USERNAME }}
        DEST_PATH: ${{ secrets.REMOTE_DESTINATION_PATH }}
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
        
        ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST "sudo systemctl stop my_telegram_bot.service"
        echo "Service stopped"
        #If we need new directory
        #ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST "sudo mkdir $DEST_PATH"
        ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST "sudo chown -R $USER:$USER $DEST_PATH"
        echo "Permissions granted"
        
        # Use rsync to copy the files from the repository to the remote node
        rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" ./bot.py $USER@$HOST:$DEST_PATH
        rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" ./json_proc.py $USER@$HOST:$DEST_PATH
        rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" ./support_func.py $USER@$HOST:$DEST_PATH
        echo "Files updated"

        # Start the service on the remote node
        ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST "sudo systemctl start my_telegram_bot.service"
        echo "Service started"
