name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Copy code to remote server
      env:
        DEPLOY_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        KEY_PASSPHRASE: ${{ secrets.SSH_KEY_PASSPHRASE }}
        SERVER_IP: ${{ secrets.REMOTE_SERVER_IP }}
        SERVER_PORT: ${{ secrets.REMOTE_SERVER_PORT }}
        DESTINATION_PATH: ${{ secrets.REMOTE_DESTINATION_PATH }}
      run: |
        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        scp -P $SERVER_PORT -o StrictHostKeyChecking=no -i deploy_key -r . $SERVER_IP:$DESTINATION_PATH
        rm -f deploy_key

    - name: Restart service on remote server
      env:
        DEPLOY_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        KEY_PASSPHRASE: ${{ secrets.SSH_KEY_PASSPHRASE }}
        SERVER_IP: ${{ secrets.REMOTE_SERVER_IP }}
        SERVER_PORT: ${{ secrets.REMOTE_SERVER_PORT }}
        SERVICE_NAME: ${{ secrets.REMOTE_SERVICE_NAME }}
      run: |
        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        ssh -p $SERVER_PORT -o StrictHostKeyChecking=no -i deploy_key $SERVER_IP "sudo systemctl restart $SERVICE_NAME"
        rm -f deploy_key
